/*
 	알고리즘[순서도] : 코드 흐름 순서 [if/for]
 		
 	반복문 : 코드 반복 
 		1. for
 			- 형태
 			1. for ( 초기값 ; 조건문 ; 증감식 ){ 실행문 }
 					초기값 : 반복변수 처음값
 					조건문 : 조건이 true면 실행 / false먄 실행X
 					증감식 : 반복변수 증가/감소 단위
 					실행문 : 조건이 true면 실행되는 구역
 			2. * 배열/리스트
 				1) for (초기값 ; 배열.length; 증감식){실행문;}
 				2) for (반복변수 of 배열/리스트){실행문;}
 				3) for (반복변수 in 배열/리스트){실행문;}
 		
		2. while
		 	- 형태 
		 	1. while (true) {실행문;}		: 무한 루프
 			2. while (조건) {실행문;}		: 조건이 true 이면 { } 안으로 들어감 [상수 조건 조심!!]
 			3. 	let i=0;				1. 반복변수 선언 [초기값]
 				while( i<10 )			2. 조건문
 				{i++;					3. 증감식 [ 반복변수 증감 ]
 										 	// i++ / i+=1 / i=i+1	: 1씩 증가
 										 	// i+=3/ i=i+3			: 3씩 증가
 										 	// i=1 일때 i+=2			: 홀수
 										 	// i=0 일때 i+=3			: 3배수
 				실행문}					4. 실행문			
 
 */

 // 1. while의 무한루프
 //while(true) {alert('반복실행')}
 
 // 2. while [ 조건이 상수이면 무한루프 ]
 //while(10>5) {alert('실행문')}
 
 // 3. while [ 조건을 변수로 이용한 반복]			// 입력에 따른 조건 결과가 바뀌니까 반복 여부 설정 가능
 //let 입력 =  prompt('입력')
// while(입력 !='exit')                      // while이 종료되는 조건
//	{console.log ('실행중');             		// 조건이 충족되지 않으면 실행되는 코드
// 	입력 = prompt('입력')}               		// 반복적으로 입력받기
 
 // 4. while [ 순서대로 반복]	
		 let i=0;									// 반복 순서 번호 변수 [반복 횟수 체크]
		 while(i<10)								// 종료 조건 : i= 10 
			 {i++;									// i는 0부터 10미만 [9]까지 1씩 증가하면서 반복 = 10회 반복
			 console.log('실행중2')+i}	
	 
 // 1. for문 [ ]
		 for (let j=0 ; j<10 ; j++ )				// j는 0부터 10미만 [9]까지 1씩 증가하면서 반복 = 10회 반복
		 	 {console.log('실행문3 : '+j)}
	 
 // 2. 배열과 for 문
 
 		//1. 0부터 마지막인덱스까지 j 반복해서 배열명[인덱스=j] 요소 호출
		 let 과일상자 = ['사과', '포도', '딸기']	 		// 데이터 3개 저장하는 배열 선언
		 for ( let j = 0; j < 과일상자.length ; j++)	
		 											// j는 0부터 배열의 길이[3]미만까지 1씩 증가하면서 반복= 0 1 2->3회
		 {console.log(j+' 번째 요소 : '+과일상자[j])} 

		 //2. of 기준으로 오른쪽에 있는 배열/리스트내 요소 하나씩 왼쪽 변수에 반복 대입
		 for(let j of 과일상자) 
		 {console.log('요소 : '+j)}
		 
		 //3. in 기준으로 오른쪽에 있는 배열/리스트내 요소의 인덱스를 하나씩 왼쪽 변수에 반복 대입
		 for(let j in 과일상자) 
		 {console.log('요소의 인덱스 : '+j)}
 
 
 
 
 
 

	 